{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/Direction.ts","webpack:///./src/index.ts","webpack:///./src/lib/Vector.ts","webpack:///./src/lib/Body.ts","webpack:///./src/lib/Entity.ts","webpack:///./src/Walker.ts","webpack:///./src/lib/Mouse.ts","webpack:///./src/lib/StaticBody.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Direction","ctx","mouse","lib_Direction","lib_Vector","Vector","x","y","this","fromDirection","dir","Up","Right","Down","Left","clone","vector","add","sub","multScalar","scalar","divScalar","magnitude","Math","sqrt","pow","normalize","mag","limit","cap","lib_Body","Body","location","width","height","draw","fillStyle","fillRect","collidesWith","body","lib_Entity","_super","Entity","mass","_this","acceleration","topSpeed","__extends","applyForce","force","accel","friction","velocity","MU","drag","speed","dragScalar","update","delta","move","src_Walker","Walker","Walker_extends","checkEdges","forceNormal","lib_Mouse","Mouse","canvas","rect","getBoundingClientRect","position","window","addEventListener","evt","updateMousePos","clientX","left","clientY","top","mouseForce","lib_StaticBody","StaticBody","StaticBody_extends","WIDTH","HEIGHT","entities","lastRender","blocks","loop","timestamp","_i","entities_2","length","ent","old_loc","_a","blocks_2","clearRect","blocks_1","entities_1","render","requestAnimationFrame","main","w","push","document","createElement","setAttribute","toString","createCanvas","appendChild","getContext","onload"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","enum Direction { Up, Right, Down, Left };\n\nexport default Direction;","import Entity from './lib/Entity';\nimport Walker from './Walker';\nimport Vector from './lib/Vector';\nimport Mouse from './lib/Mouse';\nimport Random from './lib/Random';\nimport StaticBody from './lib/StaticBody';\nimport Body from './lib/Body';\n\n\nconst WIDTH = 600;\nconst HEIGHT = 600;\n\nlet entities: Entity[] = [];\nlet lastRender = 0;\nlet ctx: CanvasRenderingContext2D | null;\nlet mouse: Mouse;\nconst blocks: Array<Body> = [];\n\n\nconst render = () => {\n    if(ctx) {\n        ctx.clearRect(0, 0, WIDTH, HEIGHT);\n        for(let block of blocks) {\n            block.draw(ctx);\n        }\n        for(const ent of entities) {\n            ent.draw(ctx);\n        }\n    }\n}\n\nconst update = delta => {\n    for(const ent of entities) {\n        const gravity = new Vector(0, 0.5 * ent.mass);\n        // ent.applyForce(gravity);\n        const old_loc = ent.location;\n        ent.update(delta, mouse);\n        for(let block of blocks) {\n            if(block.collidesWith(ent)) {\n                ent.location = old_loc;\n                ent.velocity = new Vector(0, 0);\n                ent.acceleration = new Vector(0, 0);\n            }\n        }\n    }\n}\n\n\nconst loop = timestamp => {\n    let progress = timestamp - lastRender;\n\n    update(progress);\n    render();\n\n    lastRender = timestamp;\n\n    window.requestAnimationFrame(loop);\n}\n\n\nconst createCanvas = () => {\n    let canvas = document.createElement('canvas');\n    canvas.setAttribute('height', HEIGHT.toString());\n    canvas.setAttribute('width', WIDTH.toString());\n    canvas.setAttribute('style', 'border: 1px solid black;');\n    return canvas;\n}\n\n\nfunction makeWalker(): Walker {\n    const x = WIDTH/2 + Random.randRange(-100, 100);\n    const y = HEIGHT/2 + Random.randRange(-100, 100);\n    const loc = new Vector(x, y);\n    const mass = Random.randRange(1, 20);\n    return new Walker(loc, mass);\n}\n\nconst main = () => {\n    const w = new Walker(new Vector(100, 400), 10);\n    entities.push(w);\n    blocks.push(new StaticBody(new Vector(100, 100), 30, 30));\n    blocks.push(new StaticBody(new Vector(300, 400), 30, 70));\n    const canvas = createCanvas();\n    mouse = new Mouse(canvas);\n    document.body.appendChild(canvas);\n    ctx = canvas.getContext('2d');\n    window.requestAnimationFrame(loop);\n}\n\n\ndocument.body.onload = () => {\n    main();\n}","import Direction from './Direction';\n\nclass Vector {\n    constructor(public x, public y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    static fromDirection(dir: Direction): Vector {\n        switch(dir) {\n            case Direction.Up:\n                return new Vector(0, -1);\n            case Direction.Right:\n                return new Vector(1, 0);\n            case Direction.Down:\n                return new Vector(0, 1);\n            case Direction.Left:\n                return new Vector(-1, 1);\n        }\n    }\n\n    static clone(vector: Vector) {\n        return new Vector(vector.x, vector.y);\n    }\n\n    add(vector: Vector): Vector {\n        return new Vector(this.x + vector.x, this.y + vector.y);\n    }\n\n    sub(vector: Vector): Vector {\n        return new Vector(this.x - vector.x, this.y - vector.y);\n    }\n\n    multScalar(scalar: number): Vector {\n        return new Vector(this.x * scalar, this.y * scalar);\n    }\n\n    divScalar(scalar: number): Vector {\n        return new Vector(this.x / scalar, this.y / scalar);\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x ** 2+ this.y ** 2);\n    }\n\n    normalize(): Vector {\n        const mag = this.magnitude();\n        if(!(mag < 0.001)) {\n            return this.divScalar(mag);\n        }\n        return new Vector(this.x, this.y);\n    }\n\n    limit(cap: number): Vector {\n        const mag = this.magnitude();\n        if(mag > cap) {\n            return this.normalize().multScalar(cap);\n        }\n        return Vector.clone(this);\n    }\n}\n\n\nexport default Vector;","import Vector from './Vector';\n\nclass Body {\n    constructor(public location: Vector, public width: number, public height: number) {\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'rgb(0, 0, 0)'\n        ctx.fillRect(this.location.x, this.location.y, this.width, this.height);\n    }\n\n    collidesWith(body: Body): boolean {\n        if((this.location.x + this.width > body.location.x) &&\n           (this.location.x < body.location.x + body.width) &&\n           (this.location.y + this.height > body.location.y) &&\n           (this.location.y < body.location.y + body.height)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n\nexport default Body;","import Vector from './Vector';\nimport Mouse from './Mouse';\nimport Body from './Body';\n\n\nclass Entity extends Body {\n    velocity: Vector;\n    location: Vector;\n    acceleration: Vector;\n    topSpeed: number;\n    width: number;\n    height: number;\n\n    constructor(location: Vector, public mass: number) {\n        super(location, mass * 3, mass * 3);\n        this.acceleration = new Vector(0, 0);\n        this.topSpeed = 20;\n    }\n\n\n    applyForce(force: Vector) {\n        const accel = force.divScalar(this.mass);\n        this.acceleration = this.acceleration.add(accel);\n    }\n\n    friction(): Vector {\n        const MU = 0.8;\n        const NORMAL = 1;\n        const friction = this.velocity\n                           .multScalar(-1)\n                           .normalize()\n                           .multScalar(MU * NORMAL);\n        return friction;\n    }\n\n    drag(): Vector {\n        const MU = 0.01;\n        const speed = this.velocity.magnitude();\n        const dragScalar = MU * speed * speed;\n        return this.velocity.multScalar(-1).normalize().multScalar(dragScalar);\n    }\n\n    update(delta: number, mouse: Mouse) {\n        this.applyForce(this.drag());\n        this.velocity = this.velocity.add(this.acceleration)\n                                     .limit(this.topSpeed);\n        this.location = this.location.add(this.velocity);\n        this.acceleration = this.acceleration.multScalar(0);\n    }\n\n    move(velocity: Vector) {\n        this.location = this.location.add(velocity);\n    }\n}\n\nexport default Entity;","import Vector from './lib/Vector';\nimport Random from './lib/Random';\nimport Direction from './lib/Direction';\nimport Entity from './lib/Entity';\nimport Perlin from './lib/Perlin';\nimport Mouse from './lib/Mouse';\n\n\nclass Walker extends Entity {\n    speed: number;\n    acceleration: Vector;\n    topSpeed: number;\n    \n    constructor(public location: Vector, mass: number) {\n        super(location, mass);\n        this.speed = 20;\n        this.acceleration = new Vector(0, 0);\n        this.velocity = new Vector(0, 0);\n        this.topSpeed = 10;\n    }\n\n    checkEdges() {\n        if(this.location.x > 600 - this.width) {\n            this.location.x = 600 - this.width;\n            this.velocity.x = 0;\n        }\n        if(this.location.x < 0) {\n            this.location.x = 0;\n            this.velocity.x = 0;\n        }\n        if(this.location.y > 600 - this.height) {\n            this.location.y = 600 - this.height;\n            this.velocity.y = 0;\n        }\n        if(this.location.y < 0) {\n            this.location.y = 0;\n            this.velocity.y = 0;\n        }\n    }\n\n    update(delta: number, mouse: Mouse) {\n        this.applyForce(mouse.forceNormal(this.location));\n        super.update(delta, mouse);\n        this.checkEdges();\n    }\n}\n\n\nexport default Walker;","import Vector from \"./Vector\";\n\nclass Mouse {\n    position: Vector;\n    rect: any;\n    constructor(canvas: HTMLCanvasElement) {\n        this.rect = canvas.getBoundingClientRect();\n        this.position = new Vector(0, 0);\n        window.addEventListener('mousemove', evt => this.updateMousePos(evt));\n    }\n\n    updateMousePos(evt) {\n        this.position = new Vector(evt.clientX - 10 - this.rect.left, evt.clientY - 80 - this.rect.top);\n    }\n\n    forceNormal(location: Vector): Vector {\n        let mouseForce = this.position;\n        mouseForce = mouseForce.sub(location);\n        mouseForce = mouseForce.normalize();\n        return mouseForce;\n    }\n}\n\n\nexport default Mouse;","import Vector from './Vector';\nimport Body from './Body';\n\nclass StaticBody extends Body {\n    constructor(location: Vector, width: number, height: number) {\n        super(location, width, height);\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'rgb(200, 0, 0)'\n        ctx.fillRect(this.location.x, this.location.y, this.width, this.height);\n    }\n}\n\n\nexport default StaticBody;"],"sourceRoot":""}